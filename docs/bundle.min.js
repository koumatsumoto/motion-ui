!(function(e) {
  var t = {};
  function n(r) {
    if (t[r]) return t[r].exports;
    var o = (t[r] = { i: r, l: !1, exports: {} });
    return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
  }
  (n.m = e),
    (n.c = t),
    (n.d = function(e, t, r) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
    }),
    (n.r = function(e) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (n.t = function(e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e;
      if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
      var r = Object.create(null);
      if (
        (n.r(r),
        Object.defineProperty(r, 'default', { enumerable: !0, value: e }),
        2 & t && 'string' != typeof e)
      )
        for (var o in e)
          n.d(
            r,
            o,
            function(t) {
              return e[t];
            }.bind(null, o),
          );
      return r;
    }),
    (n.n = function(e) {
      var t =
        e && e.__esModule
          ? function() {
              return e.default;
            }
          : function() {
              return e;
            };
      return n.d(t, 'a', t), t;
    }),
    (n.o = function(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.p = ''),
    n((n.s = 1));
})([
  function(e, t, n) {
    'use strict';
    function r(e) {
      for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
    }
    Object.defineProperty(t, '__esModule', { value: !0 }), r(n(5)), r(n(7));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }), n(2).debug();
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(3),
      o = n(26);
    t.debug = () =>
      o.runOnDocumentReady(() => {
        const e = document.getElementById('left-top'),
          t = document.getElementById('left-bot'),
          n = document.getElementById('right-top'),
          o = document.getElementById('right-bot'),
          i = (r, i) => {
            let a;
            switch (i) {
              case 'left-top':
                a = e;
                break;
              case 'left-bot':
                a = t;
                break;
              case 'right-top':
                a = n;
                break;
              case 'right-bot':
                a = o;
                break;
              default:
                a = e;
            }
            a.textContent = r;
          };
        let a, c, l;
        r.getLastCommandStream().subscribe((e) => (a = e)),
          r.getCommandHistoryStream().subscribe((e) => (c = e)),
          r.debug3().subscribe((e) => (l = e));
        const u = () => {
          a && i(JSON.stringify(a, null, 2), 'left-top'),
            c && i(JSON.stringify(c, null, 2), 'left-bot'),
            l && i(JSON.stringify(l, null, 2), 'right-top'),
            window.requestAnimationFrame(u);
        };
        u();
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(4),
      o = n(11),
      i = n(0),
      a = n(17),
      c = n(22),
      l = n(23),
      u = n(24);
    (t.getMovementStream = (
      e = r.getDeviceOrientationStream(),
      t = o.getDeviceMotionStream(),
    ) => {
      const { bufferCount: n, map: l, withLatestFrom: u } = i.getRx().operators;
      let s = 0;
      return t.pipe(
        n(4),
        u(e),
        l(([e, t]) => {
          const n = e.map((e) => e.rotationRate.gamma),
            r = a.combine(t.gamma, n),
            o = c.classify(r);
          return { sid: s++, data: o };
        }),
      );
    }),
      (t.debug3 = () => {
        const { filter: e, map: n } = i.getRx().operators;
        return t.getMovementStream().pipe(
          e((e) => e.data.rate > 0),
          n(
            (e) =>
              `${'up' === e.data.direction ? 'u' : 'd'}-${e.data.rate}: ${
                e.sid
              }`,
          ),
          i.withHistory(20),
          n((e) => e.reverse()),
        );
      }),
      (t.getActionStream = () => {
        const { Observable: e } = i.getRx(),
          { map: n } = i.getRx().operators;
        return new e((e) => {
          t.getMovementStream()
            .pipe(
              i.withHistory(10),
              n((e) => {
                const t = e.map((e) => e.data),
                  n = [e[0].sid, e[e.length - 1].sid],
                  r = l.checkHoldAndEntering(t);
                return r
                  ? { type: r, sid: n }
                  : u.isQuickReverse(t.slice(-2))
                  ? { type: 'quick reverse', sid: n }
                  : { type: 'moving', sid: n };
              }),
            )
            .subscribe((t) => {
              e.next(t);
            });
        });
      }),
      (t.getCommandHistoryStream = () => {
        const { map: e } = i.getRx().operators;
        return t.getActionStream().pipe(
          i.withHistory(32),
          e((e) => e.map((e) => e.type).reverse()),
        );
      }),
      (t.getLastCommandStream = () => {
        const { distinctUntilChanged: e, map: n } = i.getRx().operators;
        return t.getActionStream().pipe(
          n((e) => e.type),
          e(),
          i.withHistory(8),
          n((e) => e.reverse()),
        );
      }),
      (t.getCommandStream = () => {
        const { Observable: e } = i.getRx(),
          { map: n } = i.getRx().operators;
        return new e((e) => {
          t.getActionStream().pipe(
            i.withHistory(6),
            n((e) => {}),
          );
        });
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(0),
      o = n(9);
    t.getDeviceOrientationStream = (
      e = (() => {
        const e = new (0, r.getRx().Subject)();
        return (
          window.addEventListener('deviceorientation', (t) => {
            e.next(t);
          }),
          e.asObservable()
        );
      })(),
    ) => e.pipe(o.extract(), o.onlyEntire());
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(6);
    (t.importRxJS = () =>
      new Promise((e, t) => {
        window.rxjs && e(window.rxjs),
          r
            .loadScript(
              'https://cdnjs.cloudflare.com/ajax/libs/rxjs/7.0.0-alpha.0/rxjs.umd.min.js',
            )
            .then(() => e(window.rxjs))
            .catch(t);
      })),
      (t.getRx = () => window.rxjs);
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.loadScript = async (e) =>
        new Promise((t, n) => {
          const r = document.createElement('script');
          r.setAttribute('src', e),
            r.addEventListener('load', (e) => t(e), { once: !0 }),
            r.addEventListener('error', (e) => n(e), { once: !0 }),
            document.body.appendChild(r);
        })),
      (t.loadScripts = (e) => Promise.all(e.map((e) => t.loadScript(e))));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (function(e) {
        for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
      })(n(8));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(0);
    t.withHistory = (e) => (t) => {
      const { Observable: n } = r.getRx();
      return new n((n) => {
        const r = [];
        return t.subscribe({
          next(t) {
            if ((r.push(t), r.length > e)) r.shift(), n.next([...r]);
            else {
              if (r.length < e) return;
              n.next([...r]);
            }
          },
          error(e) {
            n.error(e);
          },
          complete() {
            n.complete();
          },
        });
      });
    };
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(0),
      o = n(10);
    (t.extract = () => (e) => {
      const { map: t } = r.getRx().operators;
      return e.pipe(
        t((e) => ({
          absolute: e.absolute,
          alpha: e.alpha,
          beta: e.beta,
          gamma: e.gamma,
        })),
      );
    }),
      (t.onlyEntire = () => (e) => {
        const { filter: t } = r.getRx().operators;
        return e.pipe(t(o.isEntireDeviceOrientation));
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.isEntireDeviceOrientation = (e) =>
        null !== e.alpha && null !== e.beta && null !== e.gamma);
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    var r = n(12);
    t.getDeviceMotionStream = r.getDeviceMotionStream;
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(0),
      o = n(13);
    t.getDeviceMotionStream = (
      e = (() => {
        const e = new (0, r.getRx().Subject)();
        return (
          window.addEventListener('devicemotion', (t) => {
            e.next(t);
          }),
          e.asObservable()
        );
      })(),
    ) => e.pipe(o.onlyEntire());
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(0),
      o = n(14),
      i = n(15),
      a = n(16);
    (t.withChange = () => (e) => {
      const { scan: t, skip: n } = r.getRx().operators;
      return e.pipe(
        t(
          (e, t) =>
            null === e
              ? { data: t, change: void 0 }
              : { data: t, change: o.getDifference(e.data, t) },
          null,
        ),
        n(1),
      );
    }),
      (t.toAverage = (e = 4) => (t) => {
        const { bufferCount: n, map: o } = r.getRx().operators;
        return t.pipe(
          n(e),
          o((e) => i.calculateAverage(e)),
        );
      }),
      (t.onlyEntire = () => (e) => {
        const { filter: t } = r.getRx().operators;
        return e.pipe(t(a.isEntireDeviceMotion));
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.getDifference = (e, t) => ({
        acceleration: {
          x: t.acceleration.x - e.acceleration.x,
          y: t.acceleration.y - e.acceleration.y,
          z: t.acceleration.z - e.acceleration.z,
        },
        accelerationIncludingGravity: {
          x:
            t.accelerationIncludingGravity.x - e.accelerationIncludingGravity.x,
          y:
            t.accelerationIncludingGravity.y - e.accelerationIncludingGravity.y,
          z:
            t.accelerationIncludingGravity.z - e.accelerationIncludingGravity.z,
        },
        rotationRate: {
          alpha: t.rotationRate.alpha - e.rotationRate.alpha,
          beta: t.rotationRate.beta - e.rotationRate.beta,
          gamma: t.rotationRate.gamma - e.rotationRate.gamma,
        },
      }));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.calculateAverage = (e) => {
        if (e.length < 1) return null;
        const t = e.length,
          n = e.reduce((e, t) => ({
            acceleration: {
              x: e.acceleration.x + t.acceleration.x,
              y: e.acceleration.y + t.acceleration.y,
              z: e.acceleration.z + t.acceleration.z,
            },
            accelerationIncludingGravity: {
              x:
                e.accelerationIncludingGravity.x +
                t.accelerationIncludingGravity.x,
              y:
                e.accelerationIncludingGravity.y +
                t.accelerationIncludingGravity.y,
              z:
                e.accelerationIncludingGravity.z +
                t.accelerationIncludingGravity.z,
            },
            rotationRate: {
              alpha: e.rotationRate.alpha + t.rotationRate.alpha,
              beta: e.rotationRate.beta + t.rotationRate.beta,
              gamma: e.rotationRate.gamma + t.rotationRate.gamma,
            },
          }));
        return {
          acceleration: {
            x: n.acceleration.x / t,
            y: n.acceleration.y / t,
            z: n.acceleration.z / t,
          },
          accelerationIncludingGravity: {
            x: n.accelerationIncludingGravity.x / t,
            y: n.accelerationIncludingGravity.y / t,
            z: n.accelerationIncludingGravity.z / t,
          },
          rotationRate: {
            alpha: n.rotationRate.alpha / t,
            beta: n.rotationRate.beta / t,
            gamma: n.rotationRate.gamma / t,
          },
        };
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.isEntireDeviceMotion = (e) => {
        const t = e.acceleration;
        if (null === t || null === t.x || null === t.y || null === t.z)
          return !1;
        const n = e.accelerationIncludingGravity;
        if (null === n || null === n.x || null === n.y || null === n.z)
          return !1;
        const r = e.rotationRate;
        return (
          null !== r && null !== r.alpha && null !== r.beta && null !== r.gamma
        );
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(18);
    t.combine = (e, t) => {
      if (t.length < 2) throw new Error('bad impl');
      const n = t[0],
        o = t[t.length - 1],
        i = {
          orientation: e >= 0 ? 'up' : 'down',
          count: t.length,
          increase: 0,
          decrease: 0,
          nochange: 0,
          first: n,
          last: o,
          max: t[0],
          min: t[0],
          avg: t[0],
        };
      let a = 0;
      for (let e = 1; e < t.length; e++) {
        const n = t[e - 1],
          r = t[e];
        r > n ? i.increase++ : r < n ? i.decrease++ : i.nochange++,
          (a += r),
          (i.max = Math.max(i.max, r)),
          (i.min = Math.min(i.min, r));
      }
      return (
        (i.avg = a / i.count),
        (i.avg = r.roundToInt(i.avg)),
        (i.min = r.roundToInt(i.min)),
        (i.max = r.roundToInt(i.max)),
        (i.first = r.roundToInt(i.first)),
        (i.last = r.roundToInt(i.last)),
        i
      );
    };
  },
  function(e, t, n) {
    'use strict';
    function r(e) {
      for (var n in e) t.hasOwnProperty(n) || (t[n] = e[n]);
    }
    Object.defineProperty(t, '__esModule', { value: !0 }),
      r(n(19)),
      r(n(20)),
      r(n(21));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.toFixed = (e, t = 0) => Number.parseFloat(e.toFixed(t)));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.floorToInt = (e) => Number.parseInt(e)),
      (t.roundToInt = (e) => Math.round(e));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.within = (e, t, n) => {
        if (t > n) throw new Error('invalid arguments');
        for (let r = t; r < n; r++) if (r <= e && e <= n) return !0;
        return !1;
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.defaultThreshold = {
        veryHigh: 120,
        high: 90,
        tap: 38,
        low: 20,
        round: 10,
      });
    const r = (e, t) =>
      e > t.veryHigh
        ? 5
        : e > t.high
        ? 4
        : e > t.tap
        ? 3
        : e > t.low
        ? 2
        : e > t.round
        ? 1
        : 0;
    t.classify = (e, n = t.defaultThreshold) => {
      if (e.first < e.last) {
        const t = r(e.last - e.first, n),
          o = e.count === e.increase;
        return {
          orientation: e.orientation,
          direction: 'up',
          rate: t,
          align: o,
        };
      }
      if (e.first > e.last) {
        const t = r(e.first - e.last, n),
          o = e.count === e.decrease;
        return {
          orientation: e.orientation,
          direction: 'down',
          rate: t,
          align: o,
        };
      }
      {
        let t, n;
        return (
          e.first > 0
            ? ((t = e.max - e.first),
              (n = e.min > 0 ? e.first - e.min : Math.abs(e.min - e.first)))
            : ((t = e.max < 0 ? Math.abs(e.first + e.max) : e.max - e.first),
              (n = Math.abs(e.min + e.first))),
          {
            orientation: e.orientation,
            direction: t > n ? 'up' : 'down',
            rate: 0,
            align: e.first === e.max && e.first === e.min,
          }
        );
      }
    };
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.stoppingCount = 4),
      (t.shortHoldCount = 7),
      (t.motionEnteringCount = 8),
      (t.longHoldCount = 10);
    const r = (e, t) => {
      if (e.length !== t) return !1;
      for (let n = 0; n < t; n++) if (0 !== e[n].rate) return !1;
      return !0;
    };
    (t.isShortHold = (e) => r(e, t.shortHoldCount)),
      (t.checkEnterMotionType = (e) => {
        if (e.length < t.motionEnteringCount) return null;
        if (t.isShortHold(e.slice(-t.shortHoldCount))) {
          if (e[e.length - 1].rate > 1) return 'quick start';
          if (e[e.length - 1].rate > 0) return 'slow start';
        }
        return null;
      }),
      (t.checkHoldAndEntering = (e) => {
        const n = ((e) => {
          let n = 0;
          for (let t = e.length - 1; t >= 0 && 0 === e[t].rate; t--) n++;
          return n >= t.longHoldCount
            ? 'long hold'
            : n >= t.shortHoldCount
            ? 'short hold'
            : n >= t.stoppingCount
            ? 'stopping'
            : null;
        })(e);
        return n || t.checkEnterMotionType(e);
      }),
      (t.isLongHold = (e) => r(e, t.longHoldCount)),
      (t.isStopping = (e) => r(e, t.stoppingCount));
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 });
    const r = n(25);
    (t.quickReverseCount = 2),
      (t.isQuickReverse = (e) => {
        if (e.length < t.quickReverseCount) return !1;
        const n = r.simplifyMovements(e),
          o = n[0],
          i = n[1];
        return !(o.rate < 3) && !(i.rate > 0);
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.simplifyMovements = (e) => {
        if (e.length < 1) return [];
        let t;
        return e.map(
          (e) => (
            void 0 === t && 0 !== e.rate && (t = e.direction),
            void 0 === t || e.direction === t
              ? { rate: e.rate, align: e.align }
              : { rate: 0 === e.rate ? 0 : -e.rate, align: e.align }
          ),
        );
      }),
      (t.contain = (e, t) => {
        for (let n = 0; n <= e.length - t.length; n++) {
          let r = !1;
          for (let o = 0; o < t.length; o++)
            if (t[o] !== e[n + o]) {
              r = !0;
              break;
            }
          if (!r) return !0;
        }
        return !1;
      });
  },
  function(e, t, n) {
    'use strict';
    Object.defineProperty(t, '__esModule', { value: !0 }),
      (t.runOnDocumentReady = (e) => {
        'complete' === document.readyState ||
        'interactive' === document.readyState
          ? setTimeout(e, 1)
          : document.addEventListener('DOMContentLoaded', () => e());
      });
  },
]);
